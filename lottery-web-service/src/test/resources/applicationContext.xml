<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- in-memory database and a datasource -->
	<!-- <jdbc:embedded-database id="dataSource"> <jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/> 
		<jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/> 
		</jdbc:embedded-database> -->
	<!-- for aop annotation 暴漏自身代理 -->
	<aop:aspectj-autoproxy expose-proxy="true" />
	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.sogou" />
	<!-- enable autowire -->
	<context:annotation-config />
	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<context:property-placeholder location="classpath:database.properties"
		ignore-unresolvable="true" />

	<import resource="classpath:spring-rabbit.xml" />

	<bean id="dataSource" class="org.logicalcobwebs.proxool.ExtendsProxoolDataSource">
		<property name="alias" value="project"></property>
		<property name="delegateProperties">
			<value>user=${jdbc_lottery.username},password=${jdbc_lottery.password}
			</value>
		</property>
		<property name="user" value="${jdbc_lottery.username}" />
		<property name="password" value="${jdbc_lottery.password}" />
		<property name="driver" value="${jdbc_lottery.driverClassName}" />
		<property name="driverUrl" value="${jdbc_lottery.url}" />
		<property name="minimumConnectionCount" value="${jdbc_lottery.minimumConnectionCount}"></property>
		<property name="maximumConnectionCount" value="${jdbc_lottery.maximumConnectionCount}"></property>
		<property name="maximumActiveTime" value="${jdbc_lottery.maximumActiveTime}"></property>
		<property name="maximumConnectionLifetime" value="${jdbc_lottery.maximumConnectionLifetime}"></property>
		<property name="prototypeCount" value="${jdbc_lottery.prototypeCount}"></property>
		<property name="houseKeepingSleepTime" value="${jdbc_lottery.houseKeepingSleepTime}"></property>
		<property name="simultaneousBuildThrottle" value="${jdbc_lottery.simultaneousBuildThrottle}"></property>
		<property name="houseKeepingTestSql" value="${jdbc_lottery.houseKeepingTestSql}"></property>
		<property name="verbose" value="${jdbc_lottery.verbose}"></property>
		<property name="statistics" value="${jdbc_lottery.statistics}"></property>
		<property name="statisticsLogLevel" value="${jdbc_lottery.statisticsLogLevel}"></property>
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="com.sogou.lottery.base.constant.SystemConfigs"
		init-method="init">
		<property name="category" value="all" />
	</bean>

	<!--<bean id="springContextHolder" class="victorinox.utils.SpringContextHolder" 
		/> -->
	<!--<bean id="cache" class="com.sogou.lottery.numstorm.persistent.FakeCache" 
		/> -->
	<!-- <bean id="cache" class="com.sogou.lottery.numstorm.persistent.RedisCacheProxy"/> -->

	<bean id="pageConfig" class="com.sogou.lottery.dao.pagination.PaginationInterceptor">
		<property name="properties">
			<props>
				<prop key="dbms">oracle</prop>
			</props>
		</property>
	</bean>

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mappers/*.xml" />
		<!-- <property name="configLocation" value="classpath*:mybatis-config-web.xml" 
			/> -->
		<property name="typeAliasesPackage" value="com.sogou.lottery.base.vo" />
		<property name="plugins">
			<list>
				<ref bean="pageConfig" />
			</list>
		</property>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sogou.lottery.dao" />
	</bean>

	<bean id="batchInsertDao" class="com.sogou.lottery.dao.impl.BatchInsertDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- redis config start -->
	<!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxActive" value="5000" /> <property name="maxIdle" value="10" 
		/> <property name="maxWait" value="1000" /> <property name="testOnBorrow" 
		value="true" /> </bean> <bean id="baseRedis" class="victorinox.jedis.BaseRedis" 
		init-method="initPool">单机版需要制定init-method <property name="host" value="${redis.host}" 
		/>单机版配置才需要 <property name="password" value="${redis.password}" /> <property 
		name="database" value="${redis.database}" /> <property name="config" ref="jedisPoolConfig" 
		/> </bean> -->

	<!-- <bean id="baseJedis" class="victorinox.jedis.BaseJedis" init-method="init"> 
		<property name="masterName" value="${redis.masterName}" /> <property name="sentinels" 
		value="${redis.sentinels}" /> <property name="baseRedis" ref="baseRedis" 
		/> <property name="baseRedisList"> <list> <ref bean="baseRedis" /> </list> 
		</property> </bean> -->
	<!-- redis config end -->
</beans>
